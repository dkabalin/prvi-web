@page "/osobe"
@using WebSaApiem.Models;
@inject HttpClient httpClient
@inject NavigationManager navManager

<h3>Osobe</h3>
<label for="search">Pretraži</label>
<input name="search" type="text" id="search" @bind-value="searchString" placeholder="Upiši String" />
<button @onclick="Pretrazi">Search</button>
<button @onclick="PrikaziSve">Prikazi sve</button>

<ul>
    @foreach(var item in osobe)
    {
      <li> 
          @item.Id
          <br>
          @item.Ime
          <br>
          @item.Prezime
          <br>
            <button class="btn btn-primary" @onclick="()=>Detalji(item.Id)">Detalji</button>
            <button class="btn btn-warning" @onclick="()=>Uredi(item.Id)">Uredi</button>
            <button class="btn btn-info" @onclick="Dodaj">Dodaj</button>
            <button class="btn btn-danger" @onclick="()=>Obrisi(item.Id)">Obrisi</button>

      </li>

    }
</ul>

@code {
    public List<Osoba> osobe = new List<Osoba>();

    public string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        var result =await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/Osobes");

        if (result.IsSuccessStatusCode)
        {
            osobe =await result.Content.ReadFromJsonAsync<List<Osoba>>();

            osobe = osobe.OrderByDescending(x=>x.Id).ToList();
        }
    }

    public void Detalji(int id)
    {
        navManager.NavigateTo($"details/{id}");
    }

    public void Uredi(int id)
    {
        navManager.NavigateTo($"edit/{id}");
    }

    public void Dodaj()
    {
        navManager.NavigateTo($"dodaj");
    }

    public void Obrisi(int id)
    {
        navManager.NavigateTo($"delete/{id}");
    }

    public void Pretrazi()
    {
        osobe = osobe.Where(x => x.Ime.ToLower().Contains(searchString.ToLower()) || 
        x.Prezime.ToLower().Contains(searchString.ToLower())).ToList();
        StateHasChanged();
    }

    public async Task PrikaziSve()
    {
        var result = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/Osobes");

        if (result.IsSuccessStatusCode)
        {
            osobe = await result.Content.ReadFromJsonAsync<List<Osoba>>();

            osobe = osobe.OrderByDescending(x => x.Id).ToList();
        }
    }

}
